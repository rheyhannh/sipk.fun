name: build-and-test
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
env: 
  API_AUTH_CHECK_REQUEST_LIMIT: ${{ secrets.API_AUTH_CHECK_REQUEST_LIMIT }}
  API_AUTH_CONFIRM_REQUEST_LIMIT: ${{ secrets.API_AUTH_CONFIRM_REQUEST_LIMIT }}
  API_AUTH_RESET_REQUEST_LIMIT: ${{ secrets.API_AUTH_RESET_REQUEST_LIMIT }}
  API_FAKTA_REQUEST_LIMIT: ${{ secrets.API_FAKTA_REQUEST_LIMIT }}
  API_LOGIN_REQUEST_LIMIT: ${{ secrets.API_LOGIN_REQUEST_LIMIT }}
  API_LOGOUT_REQUEST_LIMIT: ${{ secrets.API_LOGOUT_REQUEST_LIMIT }}
  API_MAGICLINK_REQUEST_LIMIT: ${{ secrets.API_MAGICLINK_REQUEST_LIMIT }}
  API_MATKULHISTORY_REQUEST_LIMIT: ${{ secrets.API_MATKULHISTORY_REQUEST_LIMIT }}
  API_MATKUL_REQUEST_LIMIT: ${{ secrets.API_MATKUL_REQUEST_LIMIT }}
  API_ME_REQUEST_LIMIT: ${{ secrets.API_ME_REQUEST_LIMIT }}
  API_NOTIFIKASI_REQUEST_LIMIT: ${{ secrets.API_NOTIFIKASI_REQUEST_LIMIT }}
  API_PASSWORD_REQUEST_LIMIT: ${{ secrets.API_PASSWORD_REQUEST_LIMIT }}
  API_RATING_REQUEST_LIMIT: ${{ secrets.API_RATING_REQUEST_LIMIT }}
  API_REGISTER_REQUEST_LIMIT: ${{ secrets.API_REGISTER_REQUEST_LIMIT }}
  API_SERVICE_REQUEST_LIMIT: ${{ secrets.API_SERVICE_REQUEST_LIMIT }}
  API_UNIVERSITAS_REQUEST_LIMIT: ${{ secrets.API_UNIVERSITAS_REQUEST_LIMIT }}
  JWT_ALGORITHM: ${{ secrets.JWT_ALGORITHM }}
  JWT_ISSUER: ${{ secrets.JWT_ISSUER }}
  JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
  MAXIMUM_REGISTERED_USER: ${{ secrets.MAXIMUM_REGISTERED_USER }}
  NEXT_PUBLIC_BUGSNAG_SITEKEY: ${{ secrets.NEXT_PUBLIC_BUGSNAG_SITEKEY }}
  NEXT_PUBLIC_HCAPTCHA_SITEKEY: ${{ secrets.NEXT_PUBLIC_HCAPTCHA_SITEKEY }}
  NEXT_PUBLIC_SIPK_URL: ${{ secrets.NEXT_PUBLIC_SIPK_URL }}
  SECRET_KEY: ${{ secrets.SECRET_KEY }}
  SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
  SUPABASE_API_URL: ${{ secrets.SUPABASE_API_URL }}
  SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
  SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
  USER_SESSION_COOKIES_NAME: ${{ secrets.USER_SESSION_COOKIES_NAME }}

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [22.x]
    runs-on: ${{ matrix.os }}
    steps:
    - name: üì¶ Checkout repository
      uses: actions/checkout@v4
    
    - name: üõ†Ô∏è Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: ‚ôªÔ∏è Restore Next.js cache
      uses: actions/cache@v4
      with:
        path: |
          ~/.npm
          ${{ github.workspace }}/.next/cache
        key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
        restore-keys: |
          ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
      
    - name: üì• Download and clean install dependencies
      run: npm ci
    
    - name: üèóÔ∏è Build application
      run: npm run build:purge

  test:
    needs: build
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [22.x]
    runs-on: ${{ matrix.os }}
    steps:
    - name: üì¶ Checkout repository
      uses: actions/checkout@v4
    
    - name: üõ†Ô∏è Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: üì• Download and clean install dependencies
      run: npm ci
    
    - name: üß™ Run tests
      run: |
        if npm run | grep -q "test"; then
          echo "Test script found. Running tests...";
          npm test;
        else
          echo "No test script defined. Skipping tests.";
        fi
